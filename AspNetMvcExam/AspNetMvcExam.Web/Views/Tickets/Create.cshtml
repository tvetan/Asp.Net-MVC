@model AspNetMvcExam.Models.Ticket

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Ticket</legend>


        <div class="control-group">
            @Html.LabelFor(model => model.Priority, new { @class = "control-label" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.Priority, new SelectList(Enum.GetValues(typeof(AspNetMvcExam.Models.Priority))))

                        @Html.ValidationMessageFor(model => model.Priority, null, new { @class = "help-inline" })
                </div>
        </div>

        @*<div class="control-group">
            @Html.LabelFor(model => model.Priority, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Priority)
                @Html.ValidationMessageFor(model => model.Priority, null, new { @class = "help-inline" })
            </div>
        </div>*@

        <div class="control-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownList("CategoryId", String.Empty)
                @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Url, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Url)
                @Html.ValidationMessageFor(model => model.Url, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>
       
        <div class="control-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Add ticket" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

